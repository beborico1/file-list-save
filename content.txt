Total open files: 10

### File: tsconfig.json ###
{
    "compilerOptions": {
        "module": "commonjs",
        "target": "ES2020",
        "outDir": "dist",
        "lib": [
            "ES2020"
        ],
        "sourceMap": true,
        "rootDir": "src",
        "strict": true
    },
    "exclude": [
        "node_modules",
        ".vscode-test"
    ]
}
### End of tsconfig.json ###

### File: .vscode/launch.json ###
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Extension",
            "type": "extensionHost",
            "request": "launch",
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "outFiles": [
                "${workspaceFolder}/dist/**/*.js"
            ],
            "preLaunchTask": "npm: watch"
        }
    ]
}
### End of .vscode/launch.json ###

### File: .vscode/tasks.json ###
{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "npm",
            "script": "watch",
            "problemMatcher": "$tsc-watch",
            "isBackground": true,
            "presentation": {
                "reveal": "never"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
### End of .vscode/tasks.json ###

### File: webpack.config.js ###
const path = require('path');

module.exports = {
    target: 'node',
    mode: 'none',
    entry: './src/extension.ts',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'extension.js',
        libraryTarget: 'commonjs2'
    },
    externals: {
        vscode: 'commonjs vscode'
    },
    resolve: {
        extensions: ['.ts', '.js']
    },
    module: {
        rules: [
            {
                test: /\.ts$/,
                exclude: /node_modules/,
                use: [
                    {
                        loader: 'ts-loader'
                    }
                ]
            }
        ]
    }
};

### End of webpack.config.js ###

### File: .vscodeignore ###
.vscode/**
.vscode-test/**
src/**
.gitignore
.yarnrc
webpack.config.js
vsc-extension-quickstart.md
**/tsconfig.json
**/.eslintrc.json
**/*.map
**/*.ts
### End of .vscodeignore ###

### File: src/extension.ts ###
import * as vscode from 'vscode';
import * as path from 'path';
import * as fs from 'fs';

export function activate(context: vscode.ExtensionContext) {
    let disposable = vscode.commands.registerCommand('file-list-saver.saveFileList', async () => {
        try {
            // Get workspace folder
            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];
            if (!workspaceFolder) {
                vscode.window.showErrorMessage('No workspace folder is open.');
                return;
            }

            // Get all tabs from all tab groups
            const allTabs = vscode.window.tabGroups.all.flatMap(group =>
                group.tabs.filter(tab =>
                    tab.input instanceof vscode.TabInputText &&
                    tab.input.uri.scheme === 'file'
                )
            );

            if (allTabs.length === 0) {
                vscode.window.showInformationMessage('No files are currently open.');
                return;
            }

            // Create content with relative paths and file contents
            let fullContent = `Total open files: ${allTabs.length}\n\n`;

            for (const tab of allTabs) {
                try {
                    if (tab.input instanceof vscode.TabInputText) {
                        const document = await vscode.workspace.openTextDocument(tab.input.uri);
                        const filePath = document.uri.fsPath;
                        const relativePath = path.relative(workspaceFolder.uri.fsPath, filePath);
                        const fileContent = document.getText();

                        console.log(`Processing file: ${relativePath}`); // Debug log

                        fullContent += `### File: ${relativePath} ###\n`;
                        fullContent += `${fileContent}\n`;
                        fullContent += `### End of ${relativePath} ###\n\n`;
                    }
                } catch (err) {
                    console.error(`Error processing tab ${tab.label}:`, err);
                }
            }

            // Save to content.txt in workspace root
            const contentPath = path.join(workspaceFolder.uri.fsPath, 'content.txt');
            fs.writeFileSync(contentPath, fullContent);

            // Copy to clipboard
            await vscode.env.clipboard.writeText(fullContent);

            vscode.window.showInformationMessage(
                `Saved ${allTabs.length} files to content.txt and copied to clipboard`
            );
        } catch (error) {
            console.error('Error in saveFileList:', error);
            vscode.window.showErrorMessage(`Error saving file contents: ${error}`);
        }
    });

    context.subscriptions.push(disposable);
}

export function deactivate() { }

### End of src/extension.ts ###

### File: readme.md ###
# File List Saver

A VS Code extension that saves the content of all open files into a single content.txt file.

## Features

- Save content of all open files with a single keyboard shortcut
- Maintains file structure with clear separation between files
- Shows relative paths for each file
- Works across all tab groups

## Usage

1. Open the files you want to save
2. Press `Ctrl+Alt+S` (Windows/Linux) or `Cmd+Alt+S` (Mac)
3. A `content.txt` file will be created in your workspace root containing all open files

## Requirements

- VS Code 1.80.0 or higher

## Extension Settings

This extension contributes the following settings:

- `file-list-saver.saveFileList`: Save all open files to content.txt

## Known Issues

None

## Release Notes

### 0.0.1

Initial release:

- Basic functionality to save all open files
- Keyboard shortcut support

### End of readme.md ###

### File: licence.md ###
MIT License

Copyright (c) [year] [fullname]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

### End of licence.md ###

### File: package.json ###
{
  "name": "file-list-saver",
  "publisher": "LuisCarlosRicoAlmada",
  "repository": {
    "type": "git",
    "url": "https://github.com/YOUR-USERNAME/file-list-saver"
  },
  "displayName": "File List Saver",
  "description": "Save content of all open files to content.txt",
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "file-list-saver.saveFileList",
        "title": "Save Open Files Content"
      }
    ],
    "keybindings": [
      {
        "command": "file-list-saver.saveFileList",
        "key": "ctrl+alt+s",
        "mac": "cmd+alt+s"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/node": "^20.8.0",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "eslint": "^8.49.0",
    "typescript": "^5.2.2",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4",
    "ts-loader": "^9.4.4"
  }
}
### End of package.json ###

### File: todo.md ###
# To Do List

Lets call the extension massive copy

Only .py .js .ts .jsx

And a function for copying whole repo excluding venv and node_modules

Remove the context.txt

The shortcut should be cmd m c and cmd m c r for the whole repo

Make so in settings some of this can change

Add an image

Update the readme

Publish in linked in

## Done

Lets publish it

It should copy to your clipboard as well this contents

### End of todo.md ###

